Count Inversions in an Array

problem link: https://leetcode.com/problems/reverse-pairs/description/


//////////////////////////////////////////////////////////////////////
Here we have an array and we have to return the pairs 

pairs = left element > right element

// Let's see the example,

arr = {5,3,2,4,1}; (condition (i < j ) and (arr[i] > arr[j]))

(5,3), (5,2), (5,4), (5,1), (3,2), (3,1), (2,1), (4,1)

(4,2) can't be because i !< j




// Brute force approach 
we will be at arr[0] and check all the rest element with arr[0] then for arr[1] then arr[2] and so on

time complexity = O(n^2)
space complexity = O(1)